
<div id="myDatatable-<?php echo $this->name ?>">

    <?php echo $this->_css; ?>
    <style>

        div.innerDetails { display: none }

        .open-modal {
            cursor: pointer;
        }

        #tableau-<?php echo $this->name ?> td {
            overflow: hidden; /* this is what fixes the expansion */
            white-space: normal;
            word-wrap: break-word;
            max-width: 400px;


        }

        #tableau-<?php echo $this->name ?>_length select {
            width: auto;
            margin-bottom: 0px;
        }


        #tableau-<?php echo $this->name ?>_wrapper input {
            height: auto;
            margin-bottom: 0px;
        }

        #tableau-<?php echo $this->name ?>_wrapper .fg-toolbar.ui-corner-tl {
            border-radius: 6px 6px 0px 0px;
        }

        #tableau-<?php echo $this->name ?>_wrapper .fg-toolbar.ui-corner-bl {
            border-radius: 0px 0px 6px 6px;
        }


        #tableau-<?php echo $this->name ?>_wrapper .ui-widget-header {
            margin: 0;
            box-shadow: none;
            border: none;
            border-radius: 0px;
            /*background:#3A87AD;*/
            <?php
            if (isset($this->config["style"]) && isset($this->config["style"]["datatable"])) {
                foreach ($this->config["style"]["datatable"] as $keyStyle => $valueStyle) {
                    ?>
                    <?php echo $keyStyle . ":" . $valueStyle . ";" ?>
                    <?php
                }
            }
            ?>

        }

        thead input { width: 100% }
        #tableau-<?php echo $this->name ?> tfoot input.search_init, #tableau-<?php echo $this->name ?> tfoot input.text_filter { font-size : 11px; }

        select.select_filter {max-width: 100px;font-size : 11px;}



        #tableau-<?php echo $this->name ?> table { width: 100%;}

        #tableau-<?php echo $this->name ?> table a { text-decoration: underline; }
        #tableau-<?php echo $this->name ?> table tr  >  td { border: 0px;text-align: left;vertical-align: top;  }
        #tableau-<?php echo $this->name ?> table tr  >  td:first-child {  padding-left: 50px;width: 100px;  }

        #tableau-<?php echo $this->name ?> table  >  tbody {
            border-top: 0px dotted #333333;
        }
        #tableau-<?php echo $this->name ?> table  >  tbody tr:hover {
            background-color: #E9F2F5;
            /*color: #FFF;*/
        }
        #tableau-<?php echo $this->name ?> tbody tr.even, #tableau-<?php echo $this->name ?> tbody tr.odd,
        #tableau-<?php echo $this->name ?> tbody tr.even td a, #tableau-<?php echo $this->name ?> tbody tr.odd td a{
            color: #000;

        }
        #tableau-<?php echo $this->name ?> tbody tr.even:hover, #tableau-<?php echo $this->name ?> > tbody tr.even td.highlighted {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tbody tr.even:hover > td >  a, #tableau-<?php echo $this->name ?> > tbody tr.even td.highlighted > a {
            /*color: #FFF;*/
        }


        #tableau-<?php echo $this->name ?> tbody tr.odd:hover, #tableau-<?php echo $this->name ?> > tbody tr.odd td.highlighted {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tbody tr.odd:hover > td > a, #tableau-<?php echo $this->name ?> > tbody tr.odd td.highlighted > a {
            /*color: #FFF;*/
        }


        #tableau-<?php echo $this->name ?> tr.even:hover {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_1 {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_2 {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_3 {
            background-color: #E2FF89;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.odd:hover {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_1 {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_2 {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_3 {
            background-color: #CEE7F0;
            /*color: #FFF;*/
        }

        .ColVis {
            float: left;
            margin-bottom: 0
        }

        img.detail, img.ajax-click-load {
            cursor: pointer;
        }

        .loading-overlay {
            background: rgba(0,0,0,0.6);
            position:absolute;
            width:100%;
            height:100%;
            z-index:100
        }

        /* LOADING SPINNER*/
        .circle {
            background-color: rgba(0,0,0,0);
            border:5px solid rgba(0,183,229,0.9);
            opacity:.9;
            border-right:5px solid rgba(0,0,0,0);
            border-left:5px solid rgba(0,0,0,0);
            border-radius:50px;
            box-shadow: 0 0 35px #2187e7;
            width:50px;
            height:50px;
            margin:0 auto;
            -moz-animation:spinPulse 1s infinite ease-in-out;
            -webkit-animation:spinPulse 1s infinite linear;
        }
        .circle1 {
            background-color: rgba(0,0,0,0);
            border:5px solid rgba(0,183,229,0.9);
            opacity:.9;
            border-left:5px solid rgba(0,0,0,0);
            border-right:5px solid rgba(0,0,0,0);
            border-radius:50px;
            box-shadow: 0 0 15px #2187e7;
            width:30px;
            height:30px;
            margin:0 auto;
            position:relative;
            top:-50px;
            -moz-animation:spinoffPulse 1s infinite linear;
            -webkit-animation:spinoffPulse 1s infinite linear;
        }
        @-moz-keyframes spinPulse {
            0% { -moz-transform:rotate(160deg); opacity:0; box-shadow:0 0 1px #2187e7;}
        50% { -moz-transform:rotate(145deg); opacity:1; }
        100% { -moz-transform:rotate(-320deg); opacity:0; }
        }
        @-moz-keyframes spinoffPulse {
            0% { -moz-transform:rotate(0deg); }
        100% { -moz-transform:rotate(360deg);  }
        }
        @-webkit-keyframes spinPulse {
            0% { -webkit-transform:rotate(160deg); opacity:0; box-shadow:0 0 1px #2187e7; }
        50% { -webkit-transform:rotate(145deg); opacity:1;}
        100% { -webkit-transform:rotate(-320deg); opacity:0; }
        }
        @-webkit-keyframes spinoffPulse {
            0% { -webkit-transform:rotate(0deg); }
        100% { -webkit-transform:rotate(360deg); }
        }



        .ColVis_Button {
            height: 24px;
        }


        div.ColVis_collection button.ColVis_Button {
            height: 34px;
        }

        #tableau-<?php echo $this->name ?>_length, #tableau-<?php echo $this->name ?>_filter {
            clear: right;
        }

        #tableau-<?php echo $this->name ?>_info {
            width: 70%;
        }

        #tableau-<?php echo $this->name ?>_processing {
            border : 0px;
        }

        #tableau-<?php echo $this->name ?>_filter {
            float:right;
        }

        div.DTTT_container {
            float: right;
        }


        .dataTables_length {
            width: auto;
        }


        tfoot th input, tfoot th select { width: 75%;margin-bottom: 0px; }
        tfoot th select { margin-top: 7px; width: 90%;}

        table.display tfoot tr th {
            padding: 0;
            padding-bottom: 3px;
        }

        .style-raw {
            color: black;
            background: white;
            background-color: white;
        }

        th.right{
            text-align: center;
        }

        th.left{
            text-align: center;
        }

        th.center{
            text-align: center;
        }

        td.right{
            align: right;
        }

        td.left{
            align: left;
        }

        td.center{
            align: center;
        }

        #tableau-<?php echo $this->name ?> tbody tr.even td a.btn, #tableau-<?php echo $this->name ?> tbody tr.odd td a.btn {
            color: white;
            text-decoration: none;
        }



    </style>


    <?php
    if (!isset($_GET["nomain"]) || !$_GET["nomain"]) {
        ?>
        <h1><?php echo $this->config["table"]["title"] ?></h1>
        <?php
    }
    ?>

    <?php echo $this->_beforeHTML; ?>

    <?php echo $this->_beforeTableHTML; ?>

    <table cellpadding="0" width="100%" cellspacing="0" border="0" class="display" style="margin-top:0px;" class="shin-datatable" id="tableau-<?php echo $this->name ?>">
        <thead>
            <tr>
                <?php
                $details = "";
                $filterIndividualColumn = null;
                $filterIndividualColumnShow = false;
                $bottomColumn = false;

                if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
                    $filterIndividualColumn .= '<td></td>';
                    ?>
                    <th></th>
                    <?php
                }

                $keyAjust = 0;

                if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
                    $keyAjust--;

                foreach ($this->config["columns"] as $key => $column) {
                    if ((!isset($column["show_detail"]) || !$column["show_detail"])
                            && (!isset($column["show"]) || !$column["show"])
                    ) {
                        $keyAjust++;
                    }

                    if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]
                            && isset($column["show_detail"]) && $column["show_detail"]
                    ) {
                        $details[] = $column["title"] . "|" . ($key - $keyAjust) . "|" . (isset($column["style"]) ? $column["style"] : 'default' );
                    }

                    if (isset($column["show"]) && $column["show"]
                            || isset($column["show_detail"]) && $column["show_detail"]
                    ) {
                        $filterIndividualColumn .= '<td>';
                        ?>

                        <th  class="
                        <?php echo isset($column["editable"]) && $column["editable"] ? "editable" : ""; ?>
                        <?php echo isset($column["editable_field"]) ? "editable-" . $column["editable_field"] : ""; ?>
                        <?php echo isset($column["nl2br"]) ? "editable-br2nl" : ""; ?>
                             "
                             <?php echo isset($column["width"]) ? 'style="width:' . $column["width"] . '"' : ''; ?>
                             ><?php echo $column["title"]; ?></th>

                        <?php
                        if (isset($column["filter_field"]) && $column["filter_field"]) {
                            $filterIndividualColumnShow = true;
                            $filterIndividualColumn .= '<input style="width:100%;" type="text" name="search_' . $column["name"] . '" value="Recherche par ' . $column["title"] . '" class="search_init" />';
                        }
                        ?>

                        <?php
                        if (isset($column["bottom"]) && $column["bottom"]) {
                            $bottomColumn = true;
                        }
                        ?>



                        <?php
                        $filterIndividualColumn .= '</td>';
                    }
                }
                ?>

            </tr>

            <?php
            if ($filterIndividualColumnShow && 0) {
                ?>
                <tr><?php echo $filterIndividualColumn; ?></tr>
                <?php
            }
            ?>

        </thead>
        <tbody>

        </tbody>
        <tfoot>
            <tr>
                <?php
                if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
                    $filterIndividualColumn .= '<td></td>';
                    ?>
                    <th></th>
                    <?php
                }

                foreach ($this->config["columns"] as $column) {
                    if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
                        ?>
                        <th <?php echo isset($column["width"]) ? 'style="width:' . $column["width"] . '"' : ''; ?>><?php echo $column["title"]; ?></th>
                        <?php
                    }
                }
                ?>

            </tr>


            <!-- TOTAL DU BAS -->
            <?php
            if ($bottomColumn) {
                ?>
                <tr>
                    <?php
                    if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
                        ?>
                        <th style="background-color:#fff;"></th>
                        <?php
                    }

                    foreach ($this->config["columns"] as $column) {
                        if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
                            ?>
                            <th style="background-color:#fff; height:30px; font-size:14px; text-align:center; padding:3px 0; "></th>
                            <?php
                        }
                    }
                    ?>
                </tr>
                <?php
            }
            ?>

        </tfoot>
    </table>

    <?php echo $this->_afterTableHTML; ?>

    <script type="text/javascript">
        var anOpen_<?php echo $this->name ?> = [];
        var anOpen_<?php echo $this->name ?>Id = [];
        var anOpen_<?php echo $this->name ?>2 = [];
        var anOpen_<?php echo $this->name ?>2Id = [];

        var currentAjax;



        // get visible columns
        $.fn.getColumnsShown = function(dTable)
        {
            vCols = new Array();

            $.each(dTable.fnSettings().aoColumns, function(c){
                if(dTable.fnSettings().aoColumns[c].bVisible == true){
                    vCols = vCols.concat(c)
                }
            });

            return vCols;
        }


        $.fn.fnSetFilteringDelay = function ( oSettings, iDelay ) {
            var _that = this;

            if ( iDelay === undefined ) {
                iDelay = 250;
            }

            this.each( function ( i ) {
                $.fn.dataTableExt.iApiIndex = i;
                var
                $this = this,
                oTimerId = null,
                sPreviousSearch = null,
                anControl = $( 'input', _that.fnSettings().aanFeatures.f );

                anControl.unbind( 'keyup' ).bind( 'keyup', function() {
                    var $$this = $this;

                    if (sPreviousSearch === null || sPreviousSearch != anControl.val()) {
                        window.clearTimeout(oTimerId);
                        sPreviousSearch = anControl.val();
                        oTimerId = window.setTimeout(function() {
                            $.fn.dataTableExt.iApiIndex = i;
                            _that.fnFilter( anControl.val() );
                        }, iDelay);
                    }
                });

                return this;
            } );
            return this;
        };

        var oTable_<?php echo $this->name ?>;

        $(document).ready(function() {
            if($.datepicker) {
                $.datepicker.regional['fr'] = {
                    clearText: 'Effacer', clearStatus: '',
                    closeText: 'Fermer', closeStatus: 'Fermer sans modifier',
                    prevText: '<Préc', prevStatus: 'Voir le mois précédent',
                    nextText: 'Suiv>', nextStatus: 'Voir le mois suivant',
                    currentText: 'Courant', currentStatus: 'Voir le mois courant',
                    monthNames: ['Janvier','Février','Mars','Avril','Mai','Juin',
                        'Juillet','Août','Septembre','Octobre','Novembre','Décembre'],
                    monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun',
                        'Jul','Aoû','Sep','Oct','Nov','Déc'],
                    monthStatus: 'Voir un autre mois', yearStatus: 'Voir un autre année',
                    weekHeader: 'Sm', weekStatus: '',
                    dayNames: ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi'],
                    dayNamesShort: ['Dim','Lun','Mar','Mer','Jeu','Ven','Sam'],
                    dayNamesMin: ['Di','Lu','Ma','Me','Je','Ve','Sa'],
                    dayStatus: 'Utiliser DD comme premier jour de la semaine', dateStatus: 'Choisir le DD, MM d',
                    dateFormat: 'dd/mm/yy', firstDay: 0,
                    initStatus: 'Choisir la date', isRTL: false
                };
                $.datepicker.setDefaults($.datepicker.regional['fr']);
            }
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
    ?>
                /* Details */
                function fnFormatDetails ( oTable_<?php echo $this->name ?>, nTr ) {
                    var aData = oTable_<?php echo $this->name ?>.fnGetData( nTr );
                    var sOut = '<div class="innerDetails">'+'<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
    <?php
    if (is_array($details) && count($details) > 0)
        foreach ($details as $detail) {
            list($detailName, $detailId, $style) = explode("|", $detail);
            ?>

                                    if(aData[<?php echo $detailId; ?>] != '') {
                                        sOut += '<tr><td><?php echo $detailName; ?></td><td>';
            <?php
            switch ($style) {
                case "raw":
                    ?>
                                                        sOut += '<div style="padding: 10px;" class="style-raw">'+aData[<?php echo $detailId; ?>]+'</div>'
                    <?php
                    break;


                default:
                    ?>
                                                        sOut += aData[<?php echo $detailId; ?>];
                    <?php
                    break;
            }
            ?>


                                        sOut += '</td></tr>';
                                    }



            <?php
        }
    ?>
                    sOut += '</table>';
                    return sOut;
                }




                $('#tableau-<?php echo $this->name ?> tbody td a.detail').live( 'click', function (e) {
                    e.preventDefault()
                    var nTr = $(this).parents('tr:first')[0];
                    var i = $.inArray( nTr, anOpen_<?php echo $this->name ?> );
                    if ( i === -1 ) {
                        /* Open this row */
                        $("i", this).addClass("icon-minus").removeClass("icon-plus")
                        var odd="even";
                        if ($(nTr).hasClass("odd")) {
                            odd = "odd";
                        }
                        var nDetailsRow = oTable_<?php echo $this->name ?>.fnOpen( nTr, fnFormatDetails(oTable_<?php echo $this->name ?>, nTr), 'details-other' );

                        $('div.innerDetails', nDetailsRow).slideDown();
                        anOpen_<?php echo $this->name ?>.push( nTr );
                        anOpen_<?php echo $this->name ?>Id.push( $(nTr).attr("id") );
                        $(nDetailsRow).addClass(odd)
                        $("td", nDetailsRow).addClass("highlighted")
                        $(nDetailsRow).hover(function() {
                            var odd = "even";

                            if ($(nTr).hasClass("odd")) {
                                odd = "odd";
                            }
                            if ($(nTr).hasClass(odd)) {
                                $(nTr).find("td").addClass("highlighted")
                            }

                        },function() {
                            var odd = "even"
                            if ($(nTr).hasClass("odd")) {
                                odd = "odd";
                            }
                            if ($(nTr).hasClass(odd)) {
                                $(nTr).find("td").removeClass("highlighted")
                            }
                        })

                        $(".ajax-load", nDetailsRow).each(function() {
                            if ($(this).children().length == 0 ) {
                                loadAjax($(this), $(nTr).attr("id"));
                            }

                        })

                        $(".ajax-click-load", nDetailsRow).each(function() {
                            $(this).bind('click', function() {
                                var j = $.inArray(this, anOpen_<?php echo $this->name ?>2);
                                if ( j === -1 ) {
                                    $("i", this).addClass("icon-minus").removeClass("icon-plus")
                                    anOpen_<?php echo $this->name ?>2.push( this );
                                    anOpen_<?php echo $this->name ?>2Id.push( $(this).attr("id") );
                                    loadAjax($(this).parent().find(".ajax-on-click"), $(nTr).attr("id"));
                                    $(this).parent().find(".ajax-on-click").slideDown();
                                } else {
                                    $("i", this).addClass("icon-plus").removeClass("icon-minus")
                                    anOpen_<?php echo $this->name ?>2.splice( j, 1 );
                                    anOpen_<?php echo $this->name ?>2Id.splice( j, 1 );
                                    $(this).parent().find(".ajax-on-click").slideUp();
                                }
                            });
                        });
                    }
                    else {
                        /* This row is already open - close it */
                        $("i", this).addClass("icon-plus").removeClass("icon-minus")
                        $('div.innerDetails', $(nTr).next()[0]).slideUp( function () {
                            oTable_<?php echo $this->name ?>.fnClose( nTr );
                            anOpen_<?php echo $this->name ?>.splice( i, 1 );
                            anOpen_<?php echo $this->name ?>Id.splice( i, 1 );
                        } );
                    }

                });
                /* Fin détails */
    <?php
}
?>

        oTable_<?php echo $this->name ?> = $('#tableau-<?php echo $this->name ?>').dataTable({
            "bAutoWidth": false,
<?php
if (isset($this->config["table"]["pagination"]) && !$this->config["table"]["pagination"]) {
    ?>
                    'bPaginate': false,
                    'iDisplayLength': -1,
    <?php
    //Si on a configuré un nombre d'item par defaut
} else if (isset($this->config["table"]["default_nb_items"])) {
    ?>
                    'iDisplayLength': <?php echo $this->config["table"]["default_nb_items"] ?> ,
    <?php
}

if (isset($this->config["table"]["info"]) && !$this->config["table"]["info"]) {
    ?>
                    'bInfo': false,
<?php } ?>

<?php if (isset($this->config["table"]["filter"]) && !$this->config["table"]["filter"]) { ?>
                'bFilter': false,
<?php } ?>
            'oLanguage': {
                "sProcessing": '',
                "sLengthMenu": "Montrer _MENU_ <?php echo $this->config["table"]["title_item"] ?><?php echo isset($this->config["table"]["suffix_plural"]) ? $this->config["table"]["suffix_plural"] : "s" ?> par page",
                "sZeroRecords": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?> trouvé<?php echo $this->config["table"]["suffix_genre"] ?>",
                "sEmptyTable": "Pas de <?php echo $this->config["table"]["title_item"] ?>",
                "sInfo": "<?php echo $this->config["table"]["title_item"] ?><?php echo isset($this->config["table"]["suffix_plural"]) ? $this->config["table"]["suffix_plural"] : "s" ?> _START_ à  _END_ sur _TOTAL_ <?php echo $this->config["table"]["title_item"] ?><?php echo isset($this->config["table"]["suffix_plural"]) ? $this->config["table"]["suffix_plural"] : "s" ?>",
                "sInfoEmpty": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?>",
                "sInfoFiltered": "(filtre sur _MAX_ <?php echo $this->config["table"]["title_item"] ?><?php echo isset($this->config["table"]["suffix_plural"]) ? $this->config["table"]["suffix_plural"] : "s" ?>)",
                "sInfoPostFix": "",
                "sSearch": "",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": "",
                    "sPrevious": "",
                    "sNext": "",
                    "sLast": ""
                }
            },
            'aaSorting': [
<?php
$numCol = 0;
foreach ($this->config["columns"] as $column) {
    if (isset($column["show"]) && $column["show"]) {
        if (isset($column["default_sorting"]) && $column["default_sorting"]) {
            ?>
                                        [ <?php echo isset($this->config["table"]["detail"]) && $this->config["table"]["detail"] ? $numCol + 1 : $numCol; ?>, "<?php echo $column["default_sorting_direction"]; ?>" ],
            <?php
        }

        $numCol++;
    }
}
?>
            ],
            'aoColumns': [
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
    echo '{ "bSortable": false},';

$numCol = 0;
foreach ($this->config["columns"] as $column) {
    if (isset($column["show"]) && $column["show"]
            || isset($column["show_detail"]) && $column["show_detail"]
    ) {
        $sDefinitionColumn = array();
        if (isset($column["show_detail"])
                && $column["show_detail"]
                && (!isset($column["show"]) || !$column["show"])
        ) {
            $sDefinitionColumn[] = '"bVisible":    false';
        }
        if (isset($column["sorting"])
                && $column["sorting"] === FALSE) {
            $sDefinitionColumn[] = '"bSortable": false';
        }
        if (isset($column["align"])
                && $column["align"] != "") {
            $sDefinitionColumn[] = '"sClass": "' . $column["align"] . '"';
        }

        if (count($sDefinitionColumn) > 0) {
            echo '{' . implode(",", $sDefinitionColumn) . '},';
        } else {
            echo 'null,';
        }
        //if null / implode

        $numCol++;
    }
}
?>
            ],

            "fnPreDrawCallback": function() {
                if ($(".loading-overlay").length == 0) {
                    var $overlay = $('<div class="loading-overlay"><div class="circle"></div><div class="circle1"></div></div>').hide()
                    $("#tableau-<?php echo $this->name ?>_wrapper").prepend($overlay)
                    var marginTop = $("#tableau-<?php echo $this->name ?>_wrapper").outerHeight() / 2 - 25
                    $overlay.find(".circle").css({'margin-top' : marginTop + "px"})
                    $overlay.fadeIn(500);
                }

                return true;
            },
            'fnDrawCallback': function(a, b, c) {
                $('div.loading-overlay').remove()
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
    ?>
                        if(anOpen_<?php echo $this->name ?>Id) {
                            anOpen_<?php echo $this->name ?>Id2 = anOpen_<?php echo $this->name ?>Id;
                            anOpen_<?php echo $this->name ?>Id = []

                            for(id in anOpen_<?php echo $this->name ?>Id2) {
                                item = anOpen_<?php echo $this->name ?>Id2[id]
                                if($('#' + item + ' td:first img').length > 0) {
                                    $('#' + item + ' td:first img').click();
                                }
                            }
                        }
<?php } ?>
            },
            "fnServerData": function ( sSource, aoData, fnCallback ) {
                currentAjax = {
                    source  :   sSource,
                    data    :   aoData,
                }

                $.ajax( {
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
                    "success": function(data){

                        for (i in data.bottomsValue) {
                            $('tfoot tr:last th', oTable).eq(i).html(data.bottomsValue[i])
                        }

                        fnCallback(data);
                    }
                } );
            },
            'sDom': '<?php echo $this->sDom; ?>',
            'bJQueryUI': true,
            'bSortCellsTop': true,
            'bProcessing': true,
            'bServerSide': true,
            'oTableTools': {
                'sSwfPath': $("base").attr("href") + 'app/back/swf/datatable/copy_cvs_xls.swf',
                'aButtons': [
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["copy"]) && $this->config["extra"]["copy"]) {
    ?>
                            {
                                'sExtends':    "collection",
                                'sButtonText': "Copier",
                                'aButtons': [
                                    {
                                        'sExtends': "copy",
                                        'sButtonText': "Colonnes visibles",
                                        'sCharSet': "utf8",
                                        'mColumns': "visible"
                                    },
                                    {
                                        'sExtends': "copy",
                                        'sButtonText': "Toutes colonnes",
                                        'sCharSet': "utf8",
                                        'mColumns': "all"
                                    }
                                ]
                            },
    <?php
}

if (isset($this->config["extra"]) && isset($this->config["extra"]["print"]) && $this->config["extra"]["print"]) {
    ?>
                            {
                                "sExtends": "print",
                                "sButtonText": "Imprimer",
                                "sCharSet": "utf8",
                                "mColumns": "all"
                            },
    <?php
}

if (isset($this->config["extra"]) && isset($this->config["extra"]["pdf"]) && $this->config["extra"]["pdf"]) {
    ?>
                            {
                                "sExtends":    "collection",
                                "sButtonText": "PDF",
                                "aButtons":    [
                                    {
                                        "sExtends": "pdf",
                                        "sButtonText": "Colonnes visibles",
                                        "sPdfOrientation": "landscape",
                                        "sCharSet": "utf8",
                                        "mColumns": "visible"
                                    },
                                    {
                                        "sExtends": "pdf",
                                        "sButtonText": "Toutes colonnes",
                                        "sPdfOrientation": "landscape",
                                        "sCharSet": "utf8",
                                        "mColumns": "all"
                                    }
                                ]
                            },
    <?php
}

if (isset($this->config["extra"]) && isset($this->config["extra"]["csv"]) && $this->config["extra"]["csv"]) {
    $exportFileName = $this->nameConfig . '-' . date('Y-m-d_h-m');
    ?>
                            {
                                "sExtends":    "collection",
                                "sButtonText": "CSV",
                                "aButtons":    [
                                    {
                                        "sExtends": "csv",
                                        "sButtonText": "Colonnes visibles",
                                        "sCharSet": "utf8",
                                        "mColumns": "visible",
                                        "sFileName": "<?php echo $exportFileName ?>.csv"
                                    },
                                    {
                                        "sExtends": "csv",
                                        "sButtonText": "Toutes colonnes",
                                        "sCharSet": "utf8",
                                        "mColumns": "all",
                                        "sFileName": "<?php echo $exportFileName ?>.csv"
                                    }
                                ]
                            },
    <?php
}
?>
                ]
            },
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["hide_columns"]) && $this->config["extra"]["hide_columns"]) {
    ?>
                    "oColVis": {
    <?php
    if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
        echo ' "aiExclude": [ 0 ],';
    ?>
                        "buttonText": "Cacher des colonnes"
                    },
    <?php
}
?>
            "sAjaxSource": "<?php echo $this->url; ?><?php echo strpos($this->url, "?") === false ? '?' : '&' ?>json&<?php echo $this->additionalParams ?>",
            "sServerMethod": "POST"

        }).fnSetFilteringDelay().columnFilter({
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["hide_columns"]) && $this->config["extra"]["hide_columns"]) {
    ?>
                    'bUseColVis': true,
    <?php
}
?>

            'aoColumns': [
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
    echo ' null,';

$numCol = 0;
foreach ($this->config["columns"] as $column) {
    if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
        if (!isset($column["filter_field"])) {
            ?>
                                        null,
            <?php
        } elseif ($column["filter_field"] == "text") {
            ?>
                                        {'type': "text"},
            <?php
        } elseif ($column["filter_field"] == "date-range") {
            ?>
                                        {'type': "date-range", 'pastonly' : <?php echo isset($column["filter_field_date_past"]) && $column["filter_field_date_past"] ? 'true' : 'false'; ?>, 'defaultvalues' : <?php echo isset($column["filter_field_default"]) && is_array($column["filter_field_default"]) ? json_encode($column["filter_field_default"]) : 'false'; ?>},
            <?php
        } elseif ($column["filter_field"] == "select") {
            ?>
                                        {'type': "select", 'values' : <?php echo json_encode($column["values"]); ?>},
            <?php
        }
        $numCol++;
    }
}
?>
            ]
        });

        $('.dataTables_filter input').attr("placeholder", "Recherche...");

        $('td', oTable_<?php echo $this->name ?>.fnGetNodes()).livequery(function(){
            $(this).hover(function() {
                var odd = "even"
                if ($(this).parent().hasClass("odd")) {
                    odd = "odd";
                }
                if ($(this).parent().next().hasClass(odd)) {
                    $(this).parent().next().find(" > td").addClass("highlighted")
                }
            },function() {
                var odd = "even"
                if ($(this).parent().hasClass("odd")) {
                    odd = "odd";
                }
                if ($(this).parent().next().hasClass(odd)) {
                    $(this).parent().next().find("td").removeClass("highlighted")
                }
            });

            if(!$("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable"))
            return true;

            /* Apply the jEditable handlers to the table */
            var type = $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-textarea") ? 'textarea' : "text" ;
            var type = $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-autogrow") ? 'autogrow' : "text" ;
            $(this).editable( '<?php echo $this->url; ?><?php echo strpos($this->url, "?") === false ? '?' : '&' ?>editable&<?php echo $this->additionalParams ?>'  , {
                type      : type,
                br2nl      : $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-br2nl") ? true : false ,
                cancel    : type != "text" ? 'Annuler' : null ,
                submit    : type != "text" ? 'Enregistrer' : null ,
                indicator : 'Sauvegarde en cours ...',
                placeholder   : 'Cliquer pour éditer ...',
                tooltip :  'Cliquer pour éditer ...',
                "callback": function( sValue, y ) {
                    var aPos = oTable_<?php echo $this->name ?>.fnGetPosition( this );
                    oTable_<?php echo $this->name ?>.fnUpdate( sValue, aPos[0], aPos[1]);
                },
                data: function(value, settings) {
                    /* Convert <br> to newline. */
                    var retval = value;
                    if(settings.br2nl)
                        var retval = value.br2nl();

                    return retval;
                },
                "submitdata": function ( value, settings ) {
                    return {
                        "row_id": this.parentNode.getAttribute('id'),
                        "column": oTable_<?php echo $this->name ?>.fnGetPosition( this )[2]
                    };
                },
                "width" : "100%",
                "onblur"    : type != "text" ? "ignore" : null,
                "height": type == "textarea" ? '100px' : "14px"
            } );

        });

<?php
if (isset($this->config["table"]["fixedheader"]) && $this->config["table"]["fixedheader"]) {
    ?>
                new FixedHeader( oTable_<?php echo $this->name ?>, { "offsetTop": 40, "bottom": false } );
    <?php
}
?>

    });










<?php if (isset($this->config["extra"]["deletable"]) && $this->config["extra"]["deletable"]) { ?>
//        $("#tableau-<?php echo $this->name ?> .delete-item").live("click", function(e) {
        $("#tableau-<?php echo $this->name ?> > tbody > tr > td > .btn-group > .delete-item").live("click", function(e) {
            e.preventDefault()
            // On recupere l'id de la row'
            var id = $(this).parents("tr:first").attr('id');

            var heading = 'Confirmation de suppression d\'un<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?>';
            var question = 'Etes-vous sûr de vouloir supprimer cet élément ? ';
            var cancelButtonTxt = 'Annuler';
            var okButtonTxt = 'Confirmer';

            var callback = function() {
                $.post('<?php echo $this->url; ?><?php echo strpos($this->url, "?") === false ? '?' : '&' ?>dt_action=delete&json&<?php echo $this->additionalParams ?>',
                {row_id : id},
                function() {
                    var heading = 'Suppression d\'un<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?>';
                    var message = 'L<?php echo $this->config["table"]["suffix_genre"] == "e" ? "a" : "e" ?> <?php echo $this->config["table"]["title_item"] ?>'
                        + ' a été supprimé<?php echo $this->config["table"]["suffix_genre"] ?> avec succès'
                    var closeButtonTxt = 'Fermer';
                    oTable_<?php echo $this->name ?>.fnDraw(false);
                    myModal.message(heading, message, closeButtonTxt, 2500);
                });
            };

            myModal.confirm(heading, question, cancelButtonTxt, okButtonTxt, callback);
        });





<?php } ?>


<?php if (isset($this->config["extra"]["editable"]) && $this->config["extra"]["editable"]) { ?>
        $("#tableau-<?php echo $this->name ?> .edit-item-no-ajax").live("click", function(e) {
            e.preventDefault();
            var index = $(this).parents("tr:first").attr("id")
            window.location.href = '<?php echo $this->url . '&dt_action=formEditRender&index='; ?>' + index
        });

<?php } ?>

<?php if (isset($this->config["extra"]["show"]) && $this->config["extra"]["show"]) { ?>
        $("#tableau-<?php echo $this->name ?> .show-item-no-ajax").live("click", function(e) {
            e.preventDefault();
            var index = $(this).parents("tr:first").attr("id")
            window.location.href = '<?php echo $this->url . '&dt_action=show&index='; ?>' + index
        })

<?php } ?>


    function loadAjax($elem, id) {
        var filter = $elem.attr("data-filter")
        filter = filter.replace("[INDEX]", id)
        var url = $elem.attr("rel") + "&" + filter;
        $elem.load(url)
    }




    // Convert HTML breaks to newline
    String.prototype.br2nl =
        function() {
        return this.replace(/<br\s*\/?>/mg,"\n");
    };

    var extensionsImage = ['jpg', 'jpeg', 'gif', 'png'];

    $("#tableau-<?php echo $this->name ?> > tbody > tr > td > .open-modal").live("click", function() {
        var rel = $(this).attr("rel")
        var ext = rel.split('.').pop().toLowerCase();
        if (extensionsImage.indexOf(ext) != -1) {
            $("<img>", {
                src : rel
            }).load(function() {
                myModal.message("Aperçu du fichier", $(this)[0].outerHTML, "Fermer l'aperçu");
            });
        } else {
            $.get(rel, function(data) {
                myModal.message("Aperçu", data, "Fermer l'aperçu");
            })
        }


    })


    var myModal = {
        confirm : function (heading, question, cancelButtonTxt, okButtonTxt, callback) {

            var confirmModal =
                $('<div class="modal hide fade">' +
                '<div class="modal-header">' +
                '<a class="close" data-dismiss="modal" >&times;</a>' +
                '<h3>' + heading +'</h3>' +
                '</div>' +

                '<div class="modal-body">' +
                '<p>' + question + '</p>' +
                '</div>' +

                '<div class="modal-footer">' +
                '<a href="#" class="btn btn-small btn-default" data-dismiss="modal"><i class="icon-remove"></i> ' +
                cancelButtonTxt +
                '</a>' +
                '<a href="#" id="okButton" class="btn btn btn-small btn-danger"><i class="icon-ok"></i> ' +
                okButtonTxt +
                '</a>' +
                '</div>' +
                '</div>');

            confirmModal.find('#okButton').click(function(event) {
                event.preventDefault()
                callback();
                confirmModal.modal('hide');
            });

            confirmModal.modal('show');
        },
        message : function (heading, message, closeButtonTxt, closeDelay, widthAuto) {
            var appendClass = ""
            if(widthAuto) {
                appendClass = " modal-auto-width";
            }
            var messageModal =
                $('<div class="modal hide fade' + appendClass +'">' +
                '<div class="modal-header">' +
                '<a class="close" data-dismiss="modal" >&times;</a>' +
                '<h3>' + heading + '</h3>' +
                '</div>' +
                '<div class="modal-body">' +
                '</div>' +
                '<div class="modal-footer">' +
                '<a href="#" id="closeButton" data-dismiss="modal" class="btn  btn-small btn-primary">' +
                closeButtonTxt +
                '</a>' +
                '</div>' +
                '</div>');
            var message = $.type(message) === "string" ? '<p>' + message + '</p>' : message ;
            messageModal.find(".modal-body").append(message)
            messageModal.appendTo("body")
            messageModal.modal('show');
            if (closeDelay) {
                messageModal.delay(closeDelay).queue(function(nxt) {
                    messageModal.modal("hide")
                    nxt(); // continue the queue
                })
            }

        }


    }
    var url<?php echo $this->nameConfig; ?> = '<?php echo $this->url; ?><?php echo strpos($this->url, "?") === false ? '?' : '&' ?><?php echo $this->additionalParams ?>';
    </script>

    <?php
    if (!isset($_GET["nojs"]) || !$_GET["nojs"]) {
        echo '
            ' . $this->_css . '
            ' . $this->_javascript;
    }
    ?>


</div>
<script type="text/javascript">
$.fn.dataTableExt.oApi.fnReloadAjax = function ( oSettings, sNewSource, fnCallback, bStandingRedraw )
    {
        if ( sNewSource !== undefined && sNewSource !== null ) {
            oSettings.sAjaxSource = sNewSource;
        }

        // Server-side processing should just call fnDraw
        if ( oSettings.oFeatures.bServerSide ) {
            this.fnDraw();
            return;
        }

        this.oApi._fnProcessingDisplay( oSettings, true );
        var that = this;
        var iStart = oSettings._iDisplayStart;
        var aData = [];

        this.oApi._fnServerParams( oSettings, aData );

        oSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aData, function(json) {
            /* Clear the old information from the table */
            that.oApi._fnClearTable( oSettings );

            /* Got the data - add it to the table */
            var aData =  (oSettings.sAjaxDataProp !== "") ?
                that.oApi._fnGetObjectDataFn( oSettings.sAjaxDataProp )( json ) : json;

            for ( var i=0 ; i<aData.length ; i++ )
            {
                that.oApi._fnAddData( oSettings, aData[i] );
            }

            oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

            that.fnDraw();

            if ( bStandingRedraw === true )
            {
                oSettings._iDisplayStart = iStart;
                that.oApi._fnCalculateEnd( oSettings );
                that.fnDraw( false );
            }

            that.oApi._fnProcessingDisplay( oSettings, false );

            /* Callback user function - for event handlers etc */
            if ( typeof fnCallback == 'function' && fnCallback !== null )
            {
                fnCallback( oSettings );
            }
        }, oSettings );
    };
</script>

<script type="text/javascript">

    $(document).ready(function() {
        /** Evenement sur la case à cocher selectable **/
        $("#tableau-<?php echo $this->name ?> > tbody > tr > td > .datatable-selectable").live("click", function() {
            var $this = $(this);
            var value = $this.parents("tr:first").attr("id")
            var checked = $this.is(':checked');

            $.post('<?php echo $this->url; ?><?php echo strpos($this->url, "?") === false ? '?' : '&' ?>dt_action=select&json&<?php echo $this->additionalParams ?>',
                { row_id: value, select: checked ? 1 : 0},
                function(data) {
                    if (!data.status) {
                        $this.attr('checked', !checked);
                    } else {

                    }
                    $(".datatable-selectable-nb").html(data.number)
                    $.each(data, function(id, item) {
                        $(".datatable-selectable-" + id).html(item)
                    })
                }, "json"
            );
        })


        /** Evenement sur la case à cocher selectable-all **/
        $("#tableau-<?php echo $this->name ?> > thead .datatable-selectable-all, #tableau-<?php echo $this->name ?> > tfoot .datatable-selectable-all").live("click", function() {
            var $this = $(this);
            var value = $this.val()
            var checked = $this.is(':checked');
            var data = currentAjax.data;
            data.push({name : "select", value : checked ? 1 : 0});
            if ($(".loading-overlay").length == 0) {
                var $overlay = $('<div class="loading-overlay"><div class="circle"></div><div class="circle1"></div></div>').hide()
                $("#tableau-<?php echo $this->name ?>_wrapper").prepend($overlay)
                var marginTop = $("#tableau-<?php echo $this->name ?>_wrapper").outerHeight() / 2 - 25
                $overlay.find(".circle").css({'margin-top' : marginTop + "px"})
                $overlay.fadeIn(500);
            }

            $.post(currentAjax.source + '&dt_action=selectall',
                data,
                function(data) {
                    oTable_<?php echo $this->name ?>.fnDraw();
                    if (!data.status) {
                        $this.attr('checked', !checked);
                    } else {
                        if(checked) {
                            $("#tableau-<?php echo $this->name ?> > thead .datatable-selectable-all, #tableau-<?php echo $this->name ?> > tfoot .datatable-selectable-all")
                                    .attr("checked", "checked");
                        } else {
                            $("#tableau-<?php echo $this->name ?> > thead .datatable-selectable-all, #tableau-<?php echo $this->name ?> > tfoot .datatable-selectable-all")
                                    .removeAttr("checked")
                        }
                    }
                    $(".datatable-selectable-nb").html(data.number)

                    $.each(data, function(id, item) {
                        $(".datatable-selectable-" + id).html(item)
                    })

                }, "json"
            );
        })
    })
</script>